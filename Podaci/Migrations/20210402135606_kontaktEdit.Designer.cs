// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rs1_pet_shop_webapp.EF;

namespace Podaci.Migrations
{
    [DbContext(typeof(MojDbContext))]
    [Migration("20210402135606_kontaktEdit")]
    partial class kontaktEdit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admin");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "abdulahproho@edu.fit.ba",
                            Ime = "Abdulah",
                            Password = "abdulah",
                            Prezime = "Proho"
                        });
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Adresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Grad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Adresa");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Drzava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drzava");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Naziv = "Bosna i Hercegovina"
                        },
                        new
                        {
                            Id = 2,
                            Naziv = "Srbija"
                        },
                        new
                        {
                            Id = 3,
                            Naziv = "Crna Gora"
                        },
                        new
                        {
                            Id = 4,
                            Naziv = "Hrvatska"
                        },
                        new
                        {
                            Id = 5,
                            Naziv = "Slovenija"
                        },
                        new
                        {
                            Id = 6,
                            Naziv = "Makedonija"
                        });
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Kategorija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Vrsta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategorija");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Vrsta = "Hrana"
                        },
                        new
                        {
                            Id = 2,
                            Vrsta = "Odjeca"
                        },
                        new
                        {
                            Id = 3,
                            Vrsta = "Igracke"
                        },
                        new
                        {
                            Id = 4,
                            Vrsta = "Ostalo"
                        });
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Komentar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Datum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<bool>("Odobren")
                        .HasColumnType("bit");

                    b.Property<int?>("ProizvodId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("Komentar");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Kontakt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Odgovor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Odgovoreno")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Kontakt");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Korisnik");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrojTelefona = "060300360",
                            DrzavaId = 1,
                            Email = "ajdinvreto@edu.fit.ba",
                            Ime = "Ajdin",
                            Password = "ajdin",
                            Prezime = "Vreto"
                        });
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Narudzba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdresaId")
                        .HasColumnType("int");

                    b.Property<bool>("Aktivna")
                        .HasColumnType("bit");

                    b.Property<string>("Datum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<bool>("Zavrsena")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AdresaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Narudzba");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.NarudzbaProizvodVarijacija", b =>
                {
                    b.Property<int>("NarudzbaId")
                        .HasColumnType("int");

                    b.Property<int>("ProizvodVarijacijaId")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.HasKey("NarudzbaId", "ProizvodVarijacijaId");

                    b.HasIndex("ProizvodVarijacijaId");

                    b.ToTable("NarudzbaProizvodVarijacija");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Novosti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Datum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naslov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SlikaId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SlikaId");

                    b.ToTable("Novosti");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Datum = "11/11/2020",
                            Naslov = "Whiskas proizvodi - snizenje",
                            SlikaId = 1,
                            Text = "Kupute svasta nesto i dobijte puno popusta za svaku kupovinu whiskas prozivoda"
                        },
                        new
                        {
                            Id = 2,
                            Datum = "12/11/2020",
                            Naslov = "Otvorenje nove poslovnice u Travniku",
                            SlikaId = 2,
                            Text = "Otvorenje nove poslovnice u Travniku. Pozivamo vas da nam se pridruzite i uvelicate otvorenje do sad najvece poslovnice na cijelom blakanu."
                        },
                        new
                        {
                            Id = 3,
                            Datum = "13/11/2020",
                            Naslov = "Nove igracke stigle u nase trgovine",
                            SlikaId = 3,
                            Text = "Najnoviji asortiman igackica za vase zivotinjice."
                        });
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.PopustKupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Iznos")
                        .HasColumnType("int");

                    b.Property<string>("Kod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VrstaPopusta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PopustKupon");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Iznos = 20,
                            Kod = "dvajest",
                            VrstaPopusta = "posto"
                        },
                        new
                        {
                            Id = 2,
                            Iznos = 10,
                            Kod = "cener",
                            VrstaPopusta = "fix"
                        },
                        new
                        {
                            Id = 3,
                            Iznos = 20,
                            Kod = "cvaja",
                            VrstaPopusta = "fix"
                        },
                        new
                        {
                            Id = 4,
                            Iznos = 30,
                            Kod = "trisha",
                            VrstaPopusta = "posto"
                        });
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Poslovnica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Poslovnica");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adresa = "Hase Hasanovica 13",
                            BrojTelefona = "033/456-333",
                            Grad = "Sarajevo"
                        },
                        new
                        {
                            Id = 2,
                            Adresa = "Senzacional 55",
                            BrojTelefona = "036/782-411",
                            Grad = "Mostar"
                        },
                        new
                        {
                            Id = 3,
                            Adresa = "Tvrdzava 22",
                            BrojTelefona = "032/412-111",
                            Grad = "Travnik"
                        });
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Proizvod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KategorijaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProizvodjacId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("ProizvodjacId");

                    b.ToTable("Proizvod");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KategorijaId = 1,
                            Naziv = "Hrana za macke",
                            ProizvodjacId = 1
                        },
                        new
                        {
                            Id = 2,
                            KategorijaId = 3,
                            Naziv = "Igracka za macke",
                            ProizvodjacId = 2
                        },
                        new
                        {
                            Id = 3,
                            KategorijaId = 2,
                            Naziv = "Odjeca za macke",
                            ProizvodjacId = 3
                        },
                        new
                        {
                            Id = 4,
                            KategorijaId = 2,
                            Naziv = "Odjeca za macke",
                            ProizvodjacId = 4
                        },
                        new
                        {
                            Id = 5,
                            KategorijaId = 3,
                            Naziv = "Igracke za macke",
                            ProizvodjacId = 3
                        },
                        new
                        {
                            Id = 6,
                            KategorijaId = 4,
                            Naziv = "Nesto drugo",
                            ProizvodjacId = 2
                        },
                        new
                        {
                            Id = 7,
                            KategorijaId = 1,
                            Naziv = "Hrana za ptice",
                            ProizvodjacId = 1
                        },
                        new
                        {
                            Id = 8,
                            KategorijaId = 3,
                            Naziv = "Igracke za macke",
                            ProizvodjacId = 1
                        },
                        new
                        {
                            Id = 9,
                            KategorijaId = 4,
                            Naziv = "Nesto trece",
                            ProizvodjacId = 4
                        },
                        new
                        {
                            Id = 10,
                            KategorijaId = 1,
                            Naziv = "Hrana za pse",
                            ProizvodjacId = 3
                        });
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.ProizvodVarijacija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProizvodId")
                        .HasColumnType("int");

                    b.Property<int?>("SlikaId")
                        .HasColumnType("int");

                    b.Property<string>("Velicina")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProizvodId");

                    b.HasIndex("SlikaId");

                    b.ToTable("ProizvodVarijacija");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cijena = 10.0,
                            Opis = "Hrana za macke whiskas mnogo dobra",
                            ProizvodId = 1,
                            SlikaId = 4,
                            Velicina = "Veliko"
                        },
                        new
                        {
                            Id = 2,
                            Cijena = 50.0,
                            Opis = "Igracka za macke iz danske",
                            ProizvodId = 2,
                            SlikaId = 6,
                            Velicina = "Srednje"
                        },
                        new
                        {
                            Id = 3,
                            Cijena = 20.0,
                            Opis = "Odjeca za macke armani",
                            ProizvodId = 3,
                            SlikaId = 5,
                            Velicina = "Srednje"
                        },
                        new
                        {
                            Id = 4,
                            Cijena = 5.0,
                            Opis = "Odjeca za macke gucci",
                            ProizvodId = 4,
                            SlikaId = 5,
                            Velicina = "Malo"
                        },
                        new
                        {
                            Id = 5,
                            Cijena = 3.0,
                            Opis = "Igracke za macke lego",
                            ProizvodId = 5,
                            SlikaId = 6,
                            Velicina = "Malo"
                        },
                        new
                        {
                            Id = 6,
                            Cijena = 4.0,
                            Opis = "Nesto drugo aa",
                            ProizvodId = 6,
                            SlikaId = 5,
                            Velicina = "Veliko"
                        },
                        new
                        {
                            Id = 7,
                            Cijena = 10.0,
                            Opis = "Hrana za ptice i papagaje",
                            ProizvodId = 7,
                            SlikaId = 4,
                            Velicina = "Veliko"
                        },
                        new
                        {
                            Id = 8,
                            Cijena = 26.0,
                            Opis = "Igracke za macke cici mici",
                            ProizvodId = 8,
                            SlikaId = 6,
                            Velicina = "Veliko"
                        },
                        new
                        {
                            Id = 9,
                            Cijena = 13.0,
                            Opis = "Nesto trece aaaaa",
                            ProizvodId = 9,
                            SlikaId = 5,
                            Velicina = "Srednje"
                        },
                        new
                        {
                            Id = 10,
                            Cijena = 11.0,
                            Opis = "Hrana za pse aw aw",
                            ProizvodId = 10,
                            SlikaId = 6,
                            Velicina = "Malo"
                        });
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Proizvodjac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Proizvodjac");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DrzavaId = 1,
                            Naziv = "Mars"
                        },
                        new
                        {
                            Id = 2,
                            DrzavaId = 3,
                            Naziv = "Nagger"
                        },
                        new
                        {
                            Id = 3,
                            DrzavaId = 2,
                            Naziv = "Royal cani"
                        },
                        new
                        {
                            Id = 4,
                            DrzavaId = 4,
                            Naziv = "Purina"
                        });
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Recenzija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Datum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.Property<int?>("ProizvodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("Recenzija");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Slika", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Putanja")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Slika");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Putanja = "whiskas.png"
                        },
                        new
                        {
                            Id = 2,
                            Putanja = "poslovnica.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Putanja = "toys.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Putanja = "hrana.jpg"
                        },
                        new
                        {
                            Id = 5,
                            Putanja = "odjeca.jpg"
                        },
                        new
                        {
                            Id = 6,
                            Putanja = "igracka.jpg"
                        });
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Transakcija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Datum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Iznos")
                        .HasColumnType("float");

                    b.Property<string>("NacinPlacanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NarudzbaId")
                        .HasColumnType("int");

                    b.Property<int?>("PopustKuponId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NarudzbaId");

                    b.HasIndex("PopustKuponId");

                    b.ToTable("Transakcija");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Adresa", b =>
                {
                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Komentar", b =>
                {
                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId");

                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Proizvod", "Proizvod")
                        .WithMany()
                        .HasForeignKey("ProizvodId");

                    b.Navigation("Korisnik");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Kontakt", b =>
                {
                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId");

                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId");

                    b.Navigation("Admin");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Korisnik", b =>
                {
                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Drzava", "Drzava")
                        .WithMany()
                        .HasForeignKey("DrzavaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drzava");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Narudzba", b =>
                {
                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Adresa", "Adresa")
                        .WithMany()
                        .HasForeignKey("AdresaId");

                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId");

                    b.Navigation("Adresa");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.NarudzbaProizvodVarijacija", b =>
                {
                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Narudzba", "Narudzba")
                        .WithMany()
                        .HasForeignKey("NarudzbaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rs1_pet_shop_webapp.EntityModels.ProizvodVarijacija", "ProizvodVarijacija")
                        .WithMany()
                        .HasForeignKey("ProizvodVarijacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Narudzba");

                    b.Navigation("ProizvodVarijacija");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Novosti", b =>
                {
                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Slika", "Slika")
                        .WithMany()
                        .HasForeignKey("SlikaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Slika");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Proizvod", b =>
                {
                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Kategorija", "Kategorija")
                        .WithMany()
                        .HasForeignKey("KategorijaId");

                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Proizvodjac", "Proizvodjac")
                        .WithMany()
                        .HasForeignKey("ProizvodjacId");

                    b.Navigation("Kategorija");

                    b.Navigation("Proizvodjac");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.ProizvodVarijacija", b =>
                {
                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Proizvod", "Proizvod")
                        .WithMany()
                        .HasForeignKey("ProizvodId");

                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Slika", "Slika")
                        .WithMany()
                        .HasForeignKey("SlikaId");

                    b.Navigation("Proizvod");

                    b.Navigation("Slika");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Proizvodjac", b =>
                {
                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Drzava", "Drzava")
                        .WithMany()
                        .HasForeignKey("DrzavaId");

                    b.Navigation("Drzava");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Recenzija", b =>
                {
                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId");

                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Proizvod", "Proizvod")
                        .WithMany()
                        .HasForeignKey("ProizvodId");

                    b.Navigation("Korisnik");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("rs1_pet_shop_webapp.EntityModels.Transakcija", b =>
                {
                    b.HasOne("rs1_pet_shop_webapp.EntityModels.Narudzba", "Narudzba")
                        .WithMany()
                        .HasForeignKey("NarudzbaId");

                    b.HasOne("rs1_pet_shop_webapp.EntityModels.PopustKupon", "PopustKupon")
                        .WithMany()
                        .HasForeignKey("PopustKuponId");

                    b.Navigation("Narudzba");

                    b.Navigation("PopustKupon");
                });
#pragma warning restore 612, 618
        }
    }
}
